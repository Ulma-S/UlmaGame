@startuml
title -Ulma Game-
package General{
    class Singleton{

    }
}

package System{
    package Core{
        interface IWindow{
            bool CreateWindow() //ウィンドウ作る処理
            void ClearDisplayBuffer()
            void SwapBuffer()
            void Finalize() //ウィンドウ閉じる処理
            bool CanLoop()  //メインループ判定 (終了処理が呼ばれない限りtrue)
        }

        class WindowOpenGL{
        }
        IWindow <|.. WindowOpenGL

        interface IApplicationCore{
            void Initialize()
            void Update()
            void Finalize()
        }

        class ApplicationCore{

        }
        IApplicationCore <|.. ApplicationCore
        IWindow <.. ApplicationCore
    }

    package SceneManagement{
        interface ISceneManager{
            //Stateパターン
            void UpdateScene()
            void LoadScene()
            void AddScene()
            void RemoveScene()
        }

        class SceneManager{
            //Singleton
        }

        class Scene{
            void OnEnter()  //シーンの読み込み時に呼ばれる処理
            void Update()
            void OnExit()   //シーンの終了時に呼ばれる処理
            void AddActor()
            void RemoveActor()
        }
        ISceneManager <.. SceneManager
        ISceneManager <.. Scene
        SceneManager o-- Scene
    }
    ISceneManager <.. ApplicationCore

    package InputSystem{
    interface IInputManager{

    }

    class InputManagerOpenGL{
        //Singleton
    }
    IInputManager <|.. InputManagerOpenGL
    WindowOpenGL <.. InputManagerOpenGL
    IInputManager <.. ApplicationCore
    }
}

package Game{
    class Actor{

    }

    class Component{

    }
}
Scene <.. Actor
Actor o-- Component
@enduml